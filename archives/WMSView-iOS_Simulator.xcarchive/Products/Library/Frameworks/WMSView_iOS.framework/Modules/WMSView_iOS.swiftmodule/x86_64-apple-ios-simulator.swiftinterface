// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target x86_64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name WMSView_iOS
import DeveloperToolsSupport
import Foundation
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
extension Swift.Double {
  public var toDegree: Swift.Double {
    get
  }
  public var toRadian: Swift.Double {
    get
  }
}
extension Foundation.Bundle {
  public static var WMSView: Foundation.Bundle {
    get
  }
}
extension WMSView_iOS.Projection {
  public enum Code : Swift.String {
    case epsg3857
    case epsg4326
    public init?(rawValue: Swift.String)
    public typealias RawValue = Swift.String
    public var rawValue: Swift.String {
      get
    }
  }
}
@_hasMissingDesignatedInitializers open class Projection {
  @objc deinit
}
public protocol WMSConfigurable {
  var baseUrl: Swift.String { get }
  var minZoom: Swift.Int { get }
  var maxZoom: Swift.Int { get }
  var initialZoom: Swift.Int { get }
  var tileSize: Swift.Double { get }
}
public struct WMSConfig : WMSView_iOS.WMSConfigurable {
  public let baseUrl: Swift.String
  public let minZoom: Swift.Int
  public let maxZoom: Swift.Int
  public let initialZoom: Swift.Int
  public let tileSize: Swift.Double
}
public struct Coordinate {
}
extension WMSView_iOS.Projection.Code : Swift.Equatable {}
extension WMSView_iOS.Projection.Code : Swift.Hashable {}
extension WMSView_iOS.Projection.Code : Swift.RawRepresentable {}
